openapi: 3.0.2
info:
  version: "${project.version}"
  title: "${project.name}"
  description: |
    Experimental service for finding similar images in collections.
  license:
    name: "${license.name}"
    url: "${license.url}"
servers:
  #  /api must match servlet-mapping in web.xml
  - url: "/${project.artifactId}/api"
    description: "Current server"
paths:

  # https://swagger.io/docs/specification/describing-request-body/file-upload/
  /similar:
    post:
      tags:
        - "${project.name}"
      summary: 'Request images similar to the uploaded image'
      operationId: findSimilarWhole
      requestBody:
        content:
          multipart/form-data:
            schema:
              type: object
              required:
                - image
              properties:
                image:
                  description: 'The image to use as source for the similarity search'
                  type: string
                  format: binary
                collection:
                  description: 'The collection to search for similar images.
                                If none is specified, the default collection will be used'
                  type: string
                sourceID:
                  description: 'Optional ID for the image, used for tracking & debugging'
                  type: string
                maxMatches:
                  description: 'The maximum number of similar images to return'
                  type: integer
                  default: 10

      responses:
        '200':
          description: 'An array of metadata for similar images, including URLs for the images'
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/WholeImage'

  /collections:
    get:
      tags:
        - "${project.name}"
      summary: 'List the available collections'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  type: string

  /ping:
    get:
      tags:
        - "${project.name}"
      summary: Ping the server to check if the server is reachable.
      operationId: ping
      x-useGenericResponse: false # If enabled the method will return Response
      x-streamingOutput: false # If enabled the method will return StreamingOutput.
      responses:
        '200':
          description: OK
          content:
            text/plain:
              schema:
                type: string
        '406':
          description: Not Acceptable
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '500':
          description: Internal Error
          content:
            text/plain:
              schema:
                type: string
components:
  schemas:
    WholeImage:
      type: object
      required:
        - url
      properties:
        sourceID:
          type: string
          description: 'The ID for the source image, if one was provided by the caller'
        imageID:
          type: string
          description: 'The ID for the similar image'
        distance:
          type: number
          format: double
          description: 'The similarity distance: Lower is better, 0 is identical'
        url:
          type: string
          description: 'The URL for the similar image'

    Error:
      type: object
      required:
        - code
        - message
      properties:
        code:
          type: integer
          format: int32
        message:
          type: string
